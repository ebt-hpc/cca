#!/usr/bin/env python
# -*- coding:utf-8 -*-

'''
  Text tree view provider

  Copyright 2013-2017 RIKEN

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
'''

__author__ = 'Masatomo Hashimoto <m.hashimoto@riken.jp>'

import os
import sys
import requests
import json

from common import OUTLINE_DIR, DEFAULT_USER, BASE_URL

###

HEAD = '''Content-Type: text/plain
'''

TEMPL = '''user: %(user)s
proj: %(proj)s
ver:  %(ver)s
'''


def render(data, lv=''):

    indent = lv

    if lv != '':
        indent = lv[:-1] + '+'

    cat = data.get('cat', '')

    if data.has_key('code'):
        if cat.endswith('-block'):
            print('%s<%s>' % (indent, cat))
        else:
            print('%s%s' % (indent, data['code']))

    elif cat == 'file':
        print('%s' % data['loc'])

    opened = False
    if data.has_key('state'):
        if data['state'].get('opened', False):
            opened = True

    if opened and data.has_key('children'):
        children = data['children']
        nc = len(children)
        if nc == 0:
            pass
        elif nc == 1:
            render(children[0], lv=(lv+' '))
        else:
            li = nc - 1
            for i in range(li):
                render(children[i], lv=(lv+'|'))
            render(children[li], lv=(lv+' '))

###

import cgi
import cgitb
cgitb.enable()

form = cgi.FieldStorage()

user = form.getvalue('user', DEFAULT_USER)
proj = form.getvalue('proj', None)
ver  = form.getvalue('ver', None)
path = form.getvalue('path', None)
fid  = form.getvalue('fid', None)

content = 'FAILED'

err = False

#host = os.environ['HTTP_HOST']
script = '/'.join(os.environ['SCRIPT_NAME'].split('/')[:-1]) + '/data'

json_url = 'http://localhost%s' % script
json_url_params = None

if proj and ver:
    json_url_params = { 'user' : user,
                        'proj' : proj,
                        'ver'  : ver,
                        'path' : path,
                        'fid'  : fid,
    }

    proj_dir = os.path.join(OUTLINE_DIR, proj)
    try:
        with open(os.path.join(proj_dir, 'index.json'), 'r') as pif:

            pi_tbl = json.load(pif)

            with open(os.path.join(proj_dir, 'v', ver, 'index.json'), 'r') as vif:
                vi_tbl = json.load(vif)

                fid_tbl = vi_tbl.get('fid_tbl', {}) #!!!!! obsoleted

                content = TEMPL % {
                    'user' : user,
                    'proj' : proj,
                    'ver'  : ver,
                    'base_url' : BASE_URL,
                    'src'  : path or fid_tbl.get(fid, '???'),
                    'url'  : json_url,

                    'vid' : '"'+vi_tbl.get('vid', ver)+'"',

                    'ver_kind'  : '"'+pi_tbl.get('ver_kind', 'REL')+'"',
                    'hash_algo' : '"'+pi_tbl.get('hash_algo', 'MD5')+'"',
                    'hash_meth' : '"'+pi_tbl.get('hash_meth', 'NORMAL')+'"',
                }

    except Exception, e:
            content = str(e)
            err = True

if not err and json_url_params:
    r = requests.get(json_url, params=json_url_params)
    tree_data = r.json()
    print(HEAD)
    print(content)
    render(tree_data)
